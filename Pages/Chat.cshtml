@page
@model MentalEase.Pages.ChatModel
@{
    ViewData["Title"] = "Chat";
}

<div class="chat-container">
    <!-- Sidebar -->
    <div class="chat-sidebar">
        <div class="sidebar-header">
            <h3>Chat History</h3>
            <button class="btn btn-primary btn-sm" onclick="startNewChat()">
                <i class="bi bi-plus-lg"></i> New Chat
            </button>
        </div>
        <div class="chat-history" id="chatHistory">
            <!-- Chat history items will be dynamically added here -->
        </div>
    </div>

    <!-- Main Chat Area -->
    <div class="chat-main">
        <div class="chat-messages" id="chatMessages">
            <!-- Messages will be dynamically added here -->
        </div>
        <div class="chat-input-container">
            <form id="chatForm" class="chat-input-form">
                <textarea id="userInput" class="chat-input" placeholder="Type your message here..." rows="1"></textarea>
                <button type="submit" class="send-button">
                    <i class="bi bi-send"></i>
                </button>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        .chat-container {
            display: flex;
            height: calc(100vh - 60px);
            background-color: #f8f9fa;
        }

        .chat-sidebar {
            width: 300px;
            background-color: white;
            border-right: 1px solid #dee2e6;
            display: flex;
            flex-direction: column;
        }

        .sidebar-header {
            padding: 1rem;
            border-bottom: 1px solid #dee2e6;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .chat-history {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
        }

        .chat-main {
            flex: 1;
            display: flex;
            flex-direction: column;
        }

        .chat-messages {
            flex: 1;
            overflow-y: auto;
            padding: 1rem;
        }

        .chat-input-container {
            padding: 1rem;
            background-color: white;
            border-top: 1px solid #dee2e6;
        }

        .chat-input-form {
            display: flex;
            gap: 0.5rem;
            align-items: flex-end;
        }

        .chat-input {
            flex: 1;
            padding: 0.75rem;
            border: 1px solid #dee2e6;
            border-radius: 0.5rem;
            resize: none;
            max-height: 150px;
        }

        .send-button {
            padding: 0.75rem 1.5rem;
            background-color: #0d6efd;
            color: white;
            border: none;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .send-button:hover {
            background-color: #0b5ed7;
        }

        .message {
            margin-bottom: 1rem;
            padding: 0.75rem;
            border-radius: 0.5rem;
            max-width: 80%;
        }

        .user-message {
            background-color: #e3f2fd;
            margin-left: auto;
        }

        .bot-message {
            background-color: white;
            margin-right: auto;
        }

        .chat-history-item {
            padding: 0.75rem;
            margin-bottom: 0.5rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: background-color 0.2s;
        }

        .chat-history-item:hover {
            background-color: #f8f9fa;
        }

        .chat-history-item.active {
            background-color: #e3f2fd;
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const chatForm = document.getElementById('chatForm');
            const userInput = document.getElementById('userInput');
            const chatMessages = document.getElementById('chatMessages');
            const chatHistory = document.getElementById('chatHistory');

            // Auto-resize textarea
            userInput.addEventListener('input', function() {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });

            // Handle form submission
            chatForm.addEventListener('submit', function(e) {
                e.preventDefault();
                const message = userInput.value.trim();
                if (message) {
                    addMessage(message, 'user');
                    userInput.value = '';
                    userInput.style.height = 'auto';
                    
                    // Simulate bot response
                    setTimeout(() => {
                        addMessage('This is a simulated response from the chatbot.', 'bot');
                    }, 1000);
                }
            });

            // Add message to chat
            function addMessage(text, sender) {
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${sender}-message`;
                messageDiv.textContent = text;
                chatMessages.appendChild(messageDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight;
            }

            // Add chat history item
            function addChatHistoryItem(title) {
                const historyItem = document.createElement('div');
                historyItem.className = 'chat-history-item';
                historyItem.textContent = title;
                historyItem.onclick = () => loadChat(title);
                chatHistory.appendChild(historyItem);
            }

            // Load chat
            function loadChat(title) {
                // Remove active class from all items
                document.querySelectorAll('.chat-history-item').forEach(item => {
                    item.classList.remove('active');
                });
                // Add active class to clicked item
                event.target.classList.add('active');
                // Clear messages
                chatMessages.innerHTML = '';
                // Add welcome message
                addMessage(`Loading chat: ${title}`, 'bot');
            }

            // Start new chat
            window.startNewChat = function() {
                const title = 'New Chat ' + (chatHistory.children.length + 1);
                addChatHistoryItem(title);
                loadChat(title);
            };

            // Initialize with a new chat
            startNewChat();
        });
    </script>
} 